class Node:
    def __init__(self,data):
        self.right=self.left=None
        self.data = data

class Solution:
    def insert(self,root,data):
        if root==None:
            return Node(data)
        else:
            if data<=root.data:
                cur=self.insert(root.left,data)
                root.left=cur
            else:
                cur=self.insert(root.right,data)
                root.right=cur
        return root

    def levelOrder(self,root):
          final = [root]

          while len(final) is not 0:
              cur = final[0]
              final = final[1:]

              if cur.left is not None:
                  final.append(cur.left)
              if cur.right is not None:
                  final.append(cur.right)
              
              print(str(cur.data) + " ", end="")

T=int(input())
myTree=Solution()
root=None
for i in range(T):
    data=int(input())
    root=myTree.insert(root,data)
myTree.levelOrder(root)
